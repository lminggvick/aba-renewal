$abaColor: #00adef;
$borderColor: lightgrey;

/* Tier */
$diaColor: lightblue;
$platinumColor: skyblue;
$goldColor: gold;
$silverColor: silver;
$bronzeColor: goldenrod;
$shadowBasic: 1px 1px 2px lightgrey;

@mixin set-tier($tierClazz) {
  @if ($tierClazz == 'd') {

  } @else if ($tierClazz == 'p') {

  } @else if ($tierClazz == 'g') {

  } @else if ($tierClazz == 's') {

  } @else if ($tierClazz == 'b') {

  }
}

@mixin before-css() {
  content: '‚óè';
  padding: 0 2%;
  color: $abaColor;
}

@mixin aba-point-label($fontSize, $padding) {
  background: $abaColor;
  color: white;
  font-size: $fontSize;
  padding: $padding;
  border-radius: 100%;
}

@mixin h-full() {
  height: 100%;
}

@mixin fontsize-color($size, $color: grey) {
  font-size: $size;
  color: $color;
}

@mixin border-radius($border, $px: 15px) {
  border: $border;
  border-radius: $px;
}

@mixin flex-align($justify: center, $width: 0, $fontSize: 0) {
  display: flex;
  align-items: center;
  justify-content: $justify;

  @if($width != 0) {
    width: $width;
  }

  @if($fontSize != 0) {
    font-size: $fontSize;
  }
}

@mixin content($textAlign, $width) {
  font-size: 1rem;
  display: inline-block;
  text-align: $textAlign;
  width: $width;
}

@mixin ulLiCheckbox() {
  .checkbox-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    padding: 4% 0;

    & li.absolute {
      position: absolute;
      top: 1%;
      right: 5%;
    }

    &.agree {
      padding: 6% 0;
    }

    &.form {
      padding-left: 5%;

      li {
        width: 30%;

        &.half {
          width: 17%;
        }
      }
    }

    .checkbox-list {
      width: 22%;
      display: flex;
      margin: .25rem;
      letter-spacing: -.05em;
    }

    & .check {
      display: none;
    }

    & .check:checked + label {
      color: $abaColor;
      border: 1px solid $abaColor;
    }

    & .check + label {
      padding: .5rem .25rem;
      border: 1px solid #cbd5e0;
      border-radius: .5rem;
      width: 100%;
      text-align: center;
      cursor: pointer;
    }
  }
}
