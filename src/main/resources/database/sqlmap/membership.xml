<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abacorp.aba.model.Membership">

    <!-- Mapper -->
    <resultMap id="membership" type="Membership">
        <id property="id" column="id" />
        <result property="createdAt" column="created_at" typeHandler="org.apache.ibatis.type.SqlTimestampTypeHandler" />
        <result property="expiredAt" column="expired_at" typeHandler="org.apache.ibatis.type.SqlTimestampTypeHandler" />
        <association property="user" column="user_id">
            <id property="userId" column="user_id" />
        </association>
        <association property="product" column="product_id" select="com.abacorp.aba.model.Product.selectProductById" />
    </resultMap>

    <resultMap id="product" type="Product">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="period" column="period" />
    </resultMap>

    <select id="selectExistUsingMembership" parameterType="java.lang.String" resultMap="membership">
        SELECT * FROM memberships
        WHERE expired_at > CURRENT_TIME AND user_id = #{userId}
        ORDER BY expired_at DESC LIMIT 1
    </select>

    <insert id="insertMembership" parameterType="membership">
        INSERT INTO memberships
        VALUES (NULL, #{user.userId}, #{product.id}, current_timestamp, current_timestamp + INTERVAL #{product.period} DAY)
    </insert>

    <insert id="appendMembership" parameterType="membership">
        INSERT INTO memberships
        VALUES (NULL, #{user.userId}, #{product.id}, #{createdAt}, #{expiredAt} + INTERVAL #{product.period} DAY)
    </insert>

    <update id="createExpiredEventScheduler" parameterType="hashMap">
        CREATE EVENT IF NOT EXISTS premium_${userId}
            ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL #{period} DAY
            DO UPDATE users SET role = 'USER' WHERE user_id = #{userId}
    </update>

    <update id="updateExpiredEventScheduler" parameterType="hashMap">
        ALTER EVENT premium_${userId} ON SCHEDULE AT #{expiredAt} + INTERVAL #{period} DAY
    </update>
</mapper>
